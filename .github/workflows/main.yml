name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py_version: ["3.7", "3.8", "3.9", "3.10", "3.11-dev"]
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.py_version }}
        
    - name: Install Dependencies
      run: |
        sudo apt-get update

        # SCSS
        sudo apt-get install sassc

        # Python Lint
        sudo apt-get install pylint3

        # Man
        sudo apt-get install scdoc

        # Build System
        sudo apt-get install meson

        # Debian Packaging
        sudo apt-get install debhelper devscripts

        # Locales
        sudo apt-get install gettext intltool

        # Backend: OpenRazer
        sudo add-apt-repository ppa:openrazer/daily
        sudo apt-get install python3-openrazer

        # Application Dependencies
        sudo apt-get install python3-colorama python3-colour python3-requests python3-setproctitle imagemagick
        sudo apt-get install gir1.2-gtk-3.0 gir1.2-appindicator3-0.1
        sudo apt-get install python3-pyqt5 python3-pyqt5.qtsvg python3-pyqt5.qtwebengine
        
    - name: Check Python version
      run: python --version
      
    - name: Validate JSON
      run: |
        ./tests/lint/validate-json.py

    - name: Validate SCSS
      run: |
        ./tests/lint/validate-scss.sh

    - name: Validate Python
      run: |
        ./tests/lint/validate-py.sh

    - name: Validate Manual
      run: |
        ./tests/lint/validate-scdoc.sh

    - name: Test Meson and Ninja
      run: |
        meson build --prefix=/tmp/pkg/
        ninja -C build install

    - name: Generate Locales
      run: |
        ./scripts/create-locales.sh

    - name: Build Locales
      run: |
        ./scripts/build-locales.sh

    - name: Create Artifact
      run: |
        ./scripts/create-files-for-opt.sh /tmp/dist

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: polychromatic-run${{github.run_number}}
        path: /tmp/dist/

    - name: Test Debian Packaging
      run: |
        git clean -df
        git checkout .
        sed -i "s/focal/UNRELEASED/g" debian/changelog
        dpkg-buildpackage -S -us -uc -d
        lintian --no-tag-display-limit
        debuild -b

    - name: Prepare GPG Signing Key
      if: ${{ github.event_name == 'push' && github.repository == 'polychromatic/polychromatic' && github.ref == 'refs/heads/master' }}
      run: |
        mkdir -p ~/.gnupg/
        chmod 700 ~/.gnupg
        printf "$BOT_GPG_KEY_BASE64" | base64 --decode > ~/.gnupg/private.key
        gpg --import ~/.gnupg/private.key
      env:
        BOT_GPG_KEY_BASE64: ${{ secrets.BOT_GPG_KEY_BASE64 }}

    - name: Upload Packages to Launchpad
      if: ${{ github.event_name == 'push' && github.repository == 'polychromatic/polychromatic' && github.ref == 'refs/heads/master' }}
      run: |
        git fetch --unshallow --tags
        ./scripts/packaging/prepare-edge-ppa.sh ./

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py_version: ["3.7", "3.8", "3.9", "3.10", "3.11-dev"]
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.py_version }}

    - name: Install Dependencies
      run: |
        sudo apt-get update

        # Build Dependencies
        sudo apt-get install gettext sassc

        # Application Dependencies
        sudo apt-get install python3-colorama python3-colour python3-requests python3-setproctitle imagemagick
        sudo apt-get install gir1.2-gtk-3.0 gir1.2-appindicator3-0.1
        sudo apt-get install python3-pyqt5 python3-pyqt5.qtsvg python3-pyqt5.qtwebengine

    - name: Install python package dependencies
      run: |
        python -m pip install colorama colour requests setproctitle pyqt5 PyQtWebEngine

    - name: Install OpenRazer Backend
      run: |
        git clone https://github.com/openrazer/openrazer --depth=1 "$GITHUB_WORKSPACE/openrazer"
        sudo add-apt-repository ppa:openrazer/daily
        sudo apt-get install openrazer-daemon python3-openrazer dbus-x11

    - name: Development Build
      run: |
        ./scripts/build-styles.sh
        ./scripts/build-locales.sh

    - name: Run Polychromatic Unit Tests
      run: |
        ./scripts/run-unit-tests.sh

    - name: Test OpenRazer Integration
      run: |
        eval $(sudo dbus-launch --sh-syntax)
        sudo -E ./tests/integration/openrazer/run_daemon.sh "$GITHUB_WORKSPACE/openrazer"
